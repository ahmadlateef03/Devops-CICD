#! --hashbang
chmod +x hello.sh 
10val=10 :-variable is not start with latter
val=10,value=11,  :-correct representaion of variable
val=10
echo the value is $val

read :- take the input from the user
read name  #take the value from user
echo enter name $name
read name1 name2 name3
echo enter name $name1 , $name2 , $name3
read -p 'username : ' user_var  # -p flag this allow to enter the input details in oneline
read -sp 'password : ' password_var # -s flag se password ko slient kar deta hai means password mahi dikhega
echo "username : $user_var"
echo "password : $password_var"

echo "enter name:"
read -a name # -a is consider as a array 

echo "enter name"
read          #agar nahi define kiya to by default it will take from reply  
echo "enter: $REPLY" 

echo $0 $1 $2 $3  '> echo $1 $2 $3'
args=("$@")   # $@ store the arrey value 
echo ${args[0]} ${args[1]} ${args[2]}

echo $@  #this is print same value as 27 line print value
echo $#  #this print no of arguments passed 

# if condition
count=10
if [$count -eq 10]  # -eq -ge  like this parenthesis use single bracket
then 
   echo "condition is true"
fi

########
count=10
if (($count > 10))  # >, !>, < like this parenthesis use double bracket
then 
   echo "condition is true"
fi

########
word=abc
if (($word = "abc"))  # >, !>, < like this parenthesis use double bracket
then 
   echo "condition is true"
fi

#################
word=a
if (($word = "b"))  # >, !>, < like this parenthesis use double bracket
then 
   echo "condition b is true"
elif (($word=="a"))
then
   echo "condition a is ture"
else
   echo "condition a is not ture"  
fi

#################
word=ab
if (($word = "b"))  # >, !>, < like this parenthesis use double bracket
then 
   echo "condition b is true"
else
   echo "condition a is ture"





Expressions 
An expression can be: String comparison, Numeric comparison, File operators and Logical operators and it is represented by [expression]:
String Comparisons:  
---------------------------------
=  compare if two strings are equal
!=  compare if two strings are not equal
-n  evaluate if string length is greater than zero
-z  evaluate if string length is equal to zero 

Examples: 
[ s1 = s2 ]  (true if s1 same as s2, else false)
[ s1 != s2 ]  (true if s1 not same as s2, else false)
[ s1 ]   (true if s1 is not empty, else false)
[ -n s1 ]   (true if s1 has a length greater then 0, else false)
[ -z s2 ]   (true if s2 has a length of 0, otherwise false)

Number Comparisons: 
------------------------------------
-eq compare if two numbers are equal
-ge compare if one number is greater than or equal to a number
-le  compare if one number is less than or equal to a number
-ne  compare if two numbers are not equal
-gt  compare if one number is greater than another number
-lt  compare if one number is less than another number 

Examples: 
[ n1 -eq n2 ]  (true if n1 same as n2, else false)
[ n1 -ge n2 ]  (true if n1greater then or equal to n2, else false)
[ n1 -le n2 ]  (true if n1 less then or equal to n2, else false)
[ n1 -ne n2 ]  (true if n1 is not same as n2, else false)
[ n1 -gt n2 ]  (true if n1 greater then n2, else false)
[ n1 -lt n2 ]  (true if n1 less then n2, else false)

dhsagyewfdcdshyucdsc nxcyuefndsuficdsfdsguf
ncdscgdsuidsm cxsuycgdw
dxgcvyidscvdsbcdsiyVC
NVSXVDSUYVDSVBDSYVDS
CNXSCGDS7IDCD
DSNCVDSCUDSDSNBVW
DSJDSUVDVDSLCVDSOVD
BDCVUDSGUEWUF


Git Rebase
The alternative to git merge is the git rebase option. In this, we rebase the entire feature branch to merge it with the main branch.
Follow the following commands to perform merge commit:-
